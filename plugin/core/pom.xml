<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <parent>
    <groupId>com.github.singnet.snet-sdk-java</groupId>
    <artifactId>snet-sdk-plugin-pom</artifactId>
    <version>master-SNAPSHOT</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <artifactId>snet-sdk-plugin-core</artifactId>
  <packaging>jar</packaging>

  <name>snet-sdk-plugin-core</name>
  <description>SingularityNet Java SDK Plugin Core</description>
  <!-- TODO change it to the project's website -->
  <url>http://dev.singularitynet.io</url>

  <dependencies>
    <!-- compile scope -->
    <dependency>
      <groupId>com.github.singnet.snet-sdk-java</groupId>
      <artifactId>snet-sdk-java</artifactId>
      <exclusions>
        <!-- TODO:
            grpc-protobuf artifact depends on guava:28-android.
            Android guava version doesn't inherit NonSerializableMemoizingSupplier
            from java.util.function.Supplier which lead to error while using
            gradle plugin to build Android app:
                > Failed to apply plugin [id 'com.android.internal.application']
                    > com.google.common.base.Suppliers$NonSerializableMemoizingSupplier cannot be cast to java.util.function.Supplier
            the workaround below replaces guava Android version by JRE version
            for plugins. It should be removed if guava is fixed.
        -->
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <!-- version 28.1 corresponds to the grpc version 1.28.0 -->
      <version>32.0.0-jre</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <!-- test scope -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>

    <plugins>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <!-- attached to Maven test phase -->
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>

    </plugins>

  </build>

</project>
